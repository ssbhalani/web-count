{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst svSEPickers = {\n  // Calendar navigation\n  previousMonth: 'Föregående månad',\n  nextMonth: 'Nästa månad',\n  // View navigation\n  openPreviousView: 'öppna föregående vy',\n  openNextView: 'öppna nästa vy',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvyn är öppen, byt till kalendervy' : 'kalendervyn är öppen, byt till årsvy',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slut',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Rensa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Idag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => \"Select \".concat(view, \". \").concat(time === null ? 'Ingen tid vald' : \"Vald tid \\xE4r \".concat(adapter.format(time, 'fullTime'))),\n  hoursClockNumberText: hours => \"\".concat(hours, \" timmar\"),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" minuter\"),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \" sekunder\"),\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"V\\xE4lj datum, valt datum \\xE4r \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Välj datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"V\\xE4lj tid, vald tid \\xE4r \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Välj tid',\n  // Table labels\n  timeTableLabel: 'välj tid',\n  dateTableLabel: 'välj datum'\n};\nexport const svSE = getPickersLocalization(svSEPickers);","map":{"version":3,"names":["getPickersLocalization","svSEPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","concat","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","svSE"],"sources":["/var/www/html/Work/counts/web-count/node_modules/@mui/x-date-pickers/locales/svSE.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst svSEPickers = {\n  // Calendar navigation\n  previousMonth: 'Föregående månad',\n  nextMonth: 'Nästa månad',\n  // View navigation\n  openPreviousView: 'öppna föregående vy',\n  openNextView: 'öppna nästa vy',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvyn är öppen, byt till kalendervy' : 'kalendervyn är öppen, byt till årsvy',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slut',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Rensa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Idag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'Ingen tid vald' : `Vald tid är ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} timmar`,\n  minutesClockNumberText: minutes => `${minutes} minuter`,\n  secondsClockNumberText: seconds => `${seconds} sekunder`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Välj datum, valt datum är ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Välj datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Välj tid, vald tid är ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Välj tid',\n  // Table labels\n  timeTableLabel: 'välj tid',\n  dateTableLabel: 'välj datum'\n};\nexport const svSE = getPickersLocalization(svSEPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,kBAAkB;EACjCC,SAAS,EAAE,aAAa;EACxB;EACAC,gBAAgB,EAAE,qBAAqB;EACvCC,YAAY,EAAE,gBAAgB;EAC9BC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,sCAAsC,GAAG,sCAAsC;EAC/I;EACA;EACAC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,MAAM;EACX;EACAC,iBAAiB,EAAE,QAAQ;EAC3BC,gBAAgB,EAAE,OAAO;EACzBC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,MAAM;EACxB;EACA;EACA;EACA;EACA;EACA;EACAC,cAAc,EAAEA,CAACP,IAAI,EAAEQ,IAAI,EAAEC,OAAO,eAAAC,MAAA,CAAeV,IAAI,QAAAU,MAAA,CAAKF,IAAI,KAAK,IAAI,GAAG,gBAAgB,qBAAAE,MAAA,CAAkBD,OAAO,CAACE,MAAM,CAACH,IAAI,EAAE,UAAU,CAAC,CAAE,CAAE;EAClJI,oBAAoB,EAAEC,KAAK,OAAAH,MAAA,CAAOG,KAAK,YAAS;EAChDC,sBAAsB,EAAEC,OAAO,OAAAL,MAAA,CAAOK,OAAO,aAAU;EACvDC,sBAAsB,EAAEC,OAAO,OAAAP,MAAA,CAAOO,OAAO,cAAW;EACxD;EACAC,sBAAsB,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,sCAAAT,MAAA,CAAgCU,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,YAAY;EAC3LI,sBAAsB,EAAEA,CAACJ,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,kCAAAT,MAAA,CAA4BU,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,UAAU;EACrL;EACAK,cAAc,EAAE,UAAU;EAC1BC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,IAAI,GAAGjC,sBAAsB,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}