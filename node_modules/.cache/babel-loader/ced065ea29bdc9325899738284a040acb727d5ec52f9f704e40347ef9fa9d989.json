{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n};\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? \"la vista de entrada de texto est\\xE1 abierta, ir a la vista \".concat(viewType) : \"la vista \".concat(viewType, \" est\\xE1 abierta, ir a la vista de entrada de texto\"),\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpiar',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Seleccionar fecha',\n  dateTimePickerDefaultToolbarTitle: 'Seleccionar fecha & hora',\n  timePickerDefaultToolbarTitle: 'Seleccionar hora',\n  dateRangePickerDefaultToolbarTitle: 'Seleccionar rango de fecha',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => \"Seleccione \".concat(views[view], \". \").concat(time === null ? 'Sin tiempo seleccionado' : \"El tiempo seleccionado es \".concat(adapter.format(time, 'fullTime'))),\n  hoursClockNumberText: hours => \"\".concat(hours, \" horas\"),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" minutos\"),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \" segundos\"),\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la fecha, la fecha elegida es \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la hora, la hora elegido es \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","esESPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","concat","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","esES"],"sources":["/var/www/html/Work/counts/web-count/node_modules/@mui/x-date-pickers/locales/esES.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n};\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `la vista de entrada de texto está abierta, ir a la vista ${viewType}` : `la vista ${viewType} está abierta, ir a la vista de entrada de texto`,\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpiar',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Seleccionar fecha',\n  dateTimePickerDefaultToolbarTitle: 'Seleccionar fecha & hora',\n  timePickerDefaultToolbarTitle: 'Seleccionar hora',\n  dateRangePickerDefaultToolbarTitle: 'Seleccionar rango de fecha',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'Sin tiempo seleccionado' : `El tiempo seleccionado es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la fecha, la fecha elegida es ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la hora, la hora elegido es ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC;AACvE,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,WAAW;EAClBC,OAAO,EAAE,aAAa;EACtBC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,YAAY;EAC3BC,SAAS,EAAE,aAAa;EACxB;EACAC,gBAAgB,EAAE,uBAAuB;EACzCC,YAAY,EAAE,0BAA0B;EACxCC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,gEAAgE,GAAG,gEAAgE;EACnMC,8BAA8B,EAAEA,CAACC,mBAAmB,EAAEC,QAAQ,KAAKD,mBAAmB,kEAAAE,MAAA,CAA+DD,QAAQ,gBAAAC,MAAA,CAAiBD,QAAQ,wDAAkD;EACxO;EACAE,KAAK,EAAE,SAAS;EAChBC,GAAG,EAAE,UAAU;EACf;EACAC,iBAAiB,EAAE,UAAU;EAC7BC,gBAAgB,EAAE,SAAS;EAC3BC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,KAAK;EACvB;EACAC,6BAA6B,EAAE,mBAAmB;EAClDC,iCAAiC,EAAE,0BAA0B;EAC7DC,6BAA6B,EAAE,kBAAkB;EACjDC,kCAAkC,EAAE,4BAA4B;EAChE;EACAC,cAAc,EAAEA,CAACf,IAAI,EAAEgB,IAAI,EAAEC,OAAO,mBAAAb,MAAA,CAAmBd,KAAK,CAACU,IAAI,CAAC,QAAAI,MAAA,CAAKY,IAAI,KAAK,IAAI,GAAG,yBAAyB,gCAAAZ,MAAA,CAAgCa,OAAO,CAACC,MAAM,CAACF,IAAI,EAAE,UAAU,CAAC,CAAE,CAAE;EACpLG,oBAAoB,EAAE5B,KAAK,OAAAa,MAAA,CAAOb,KAAK,WAAQ;EAC/C6B,sBAAsB,EAAE5B,OAAO,OAAAY,MAAA,CAAOZ,OAAO,aAAU;EACvD6B,sBAAsB,EAAE5B,OAAO,OAAAW,MAAA,CAAOX,OAAO,cAAW;EACxD;EACA6B,sBAAsB,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,0CAAAnB,MAAA,CAA0CoB,KAAK,CAACN,MAAM,CAACM,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,gBAAgB;EACzMI,sBAAsB,EAAEA,CAACJ,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,wCAAAnB,MAAA,CAAwCoB,KAAK,CAACN,MAAM,CAACM,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,eAAe;EACtM;EACAK,cAAc,EAAE,gBAAgB;EAChCC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,IAAI,GAAGzC,sBAAsB,CAACK,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}