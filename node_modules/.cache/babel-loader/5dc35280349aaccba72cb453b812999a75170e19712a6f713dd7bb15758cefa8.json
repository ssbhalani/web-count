{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // maps TimeView to its translation\n\nconst timeViews = {\n  hours: 'Óra',\n  minutes: 'Perc',\n  seconds: 'Másodperc'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nconst pickerViews = {\n  calendar: 'naptár',\n  clock: 'óra'\n};\nconst huHUPickers = {\n  // Calendar navigation\n  previousMonth: 'Előző hónap',\n  nextMonth: 'Következő hónap',\n  // View navigation\n  openPreviousView: 'Előző nézet megnyitása',\n  openNextView: 'Következő nézet megnyitása',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'az évválasztó már nyitva, váltson a naptárnézetre' : 'a naptárnézet már nyitva, váltson az évválasztóra',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? \"sz\\xF6veges beviteli n\\xE9zet akt\\xEDv, v\\xE1lt\\xE1s \".concat(pickerViews[viewType], \" n\\xE9zetre\") : \"\".concat(pickerViews[viewType], \" beviteli n\\xE9zet akt\\xEDv, v\\xE1lt\\xE1s sz\\xF6veges beviteli n\\xE9zetre\"),\n  // DateRange placeholders\n  start: 'Kezdő dátum',\n  end: 'Záró dátum',\n  // Action bar\n  cancelButtonLabel: 'Mégse',\n  clearButtonLabel: 'Törlés',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Ma',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Dátum kiválasztása',\n  dateTimePickerDefaultToolbarTitle: 'Dátum és idő kiválasztása',\n  timePickerDefaultToolbarTitle: 'Idő kiválasztása',\n  dateRangePickerDefaultToolbarTitle: 'Dátumhatárok kiválasztása',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _timeViews$view;\n    return \"\".concat((_timeViews$view = timeViews[view]) != null ? _timeViews$view : view, \" kiv\\xE1laszt\\xE1sa. \").concat(time === null ? 'Nincs kiválasztva idő' : \"A kiv\\xE1lasztott id\\u0151 \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: hours => \"\".concat(hours, \" \").concat(timeViews.hours.toLowerCase()),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" \").concat(timeViews.minutes.toLowerCase()),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \"  \").concat(timeViews.seconds.toLowerCase()),\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? \"V\\xE1lasszon d\\xE1tumot, a kiv\\xE1lasztott d\\xE1tum: \".concat(utils.format(value, 'fullDate')) : 'Válasszon dátumot',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? \"V\\xE1lasszon id\\u0151t, a kiv\\xE1lasztott id\\u0151: \".concat(utils.format(value, 'fullTime')) : 'Válasszon időt',\n  // Table labels\n  timeTableLabel: 'válasszon időt',\n  dateTableLabel: 'válasszon dátumot'\n};\nexport const huHU = getPickersLocalization(huHUPickers);","map":{"version":3,"names":["getPickersLocalization","timeViews","hours","minutes","seconds","pickerViews","calendar","clock","huHUPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","concat","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","_timeViews$view","format","hoursClockNumberText","toLowerCase","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","huHU"],"sources":["/var/www/html/Work/counts/web-count/node_modules/@mui/x-date-pickers/locales/huHU.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization'; // maps TimeView to its translation\n\nconst timeViews = {\n  hours: 'Óra',\n  minutes: 'Perc',\n  seconds: 'Másodperc'\n}; // maps PickersToolbar[\"viewType\"] to its translation\n\nconst pickerViews = {\n  calendar: 'naptár',\n  clock: 'óra'\n};\nconst huHUPickers = {\n  // Calendar navigation\n  previousMonth: 'Előző hónap',\n  nextMonth: 'Következő hónap',\n  // View navigation\n  openPreviousView: 'Előző nézet megnyitása',\n  openNextView: 'Következő nézet megnyitása',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'az évválasztó már nyitva, váltson a naptárnézetre' : 'a naptárnézet már nyitva, váltson az évválasztóra',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `szöveges beviteli nézet aktív, váltás ${pickerViews[viewType]} nézetre` : `${pickerViews[viewType]} beviteli nézet aktív, váltás szöveges beviteli nézetre`,\n  // DateRange placeholders\n  start: 'Kezdő dátum',\n  end: 'Záró dátum',\n  // Action bar\n  cancelButtonLabel: 'Mégse',\n  clearButtonLabel: 'Törlés',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Ma',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Dátum kiválasztása',\n  dateTimePickerDefaultToolbarTitle: 'Dátum és idő kiválasztása',\n  timePickerDefaultToolbarTitle: 'Idő kiválasztása',\n  dateRangePickerDefaultToolbarTitle: 'Dátumhatárok kiválasztása',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _timeViews$view;\n\n    return `${(_timeViews$view = timeViews[view]) != null ? _timeViews$view : view} kiválasztása. ${time === null ? 'Nincs kiválasztva idő' : `A kiválasztott idő ${adapter.format(time, 'fullTime')}`}`;\n  },\n  hoursClockNumberText: hours => `${hours} ${timeViews.hours.toLowerCase()}`,\n  minutesClockNumberText: minutes => `${minutes} ${timeViews.minutes.toLowerCase()}`,\n  secondsClockNumberText: seconds => `${seconds}  ${timeViews.seconds.toLowerCase()}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Válasszon dátumot, a kiválasztott dátum: ${utils.format(value, 'fullDate')}` : 'Válasszon dátumot',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Válasszon időt, a kiválasztott idő: ${utils.format(value, 'fullTime')}` : 'Válasszon időt',\n  // Table labels\n  timeTableLabel: 'válasszon időt',\n  dateTableLabel: 'válasszon dátumot'\n};\nexport const huHU = getPickersLocalization(huHUPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC,CAAC,CAAC;;AAEzE,MAAMC,SAAS,GAAG;EAChBC,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;AACX,CAAC,CAAC,CAAC;;AAEH,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAE,QAAQ;EAClBC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,aAAa;EAC5BC,SAAS,EAAE,iBAAiB;EAC5B;EACAC,gBAAgB,EAAE,wBAAwB;EAC1CC,YAAY,EAAE,4BAA4B;EAC1CC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,mDAAmD,GAAG,mDAAmD;EACzKC,8BAA8B,EAAEA,CAACC,mBAAmB,EAAEC,QAAQ,KAAKD,mBAAmB,2DAAAE,MAAA,CAA4Cb,WAAW,CAACY,QAAQ,CAAC,sBAAAC,MAAA,CAAgBb,WAAW,CAACY,QAAQ,CAAC,8EAAyD;EACrP;EACAE,KAAK,EAAE,aAAa;EACpBC,GAAG,EAAE,YAAY;EACjB;EACAC,iBAAiB,EAAE,OAAO;EAC1BC,gBAAgB,EAAE,QAAQ;EAC1BC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,IAAI;EACtB;EACAC,6BAA6B,EAAE,oBAAoB;EACnDC,iCAAiC,EAAE,2BAA2B;EAC9DC,6BAA6B,EAAE,kBAAkB;EACjDC,kCAAkC,EAAE,2BAA2B;EAC/D;EACAC,cAAc,EAAEA,CAACf,IAAI,EAAEgB,IAAI,EAAEC,OAAO,KAAK;IACvC,IAAIC,eAAe;IAEnB,UAAAd,MAAA,CAAU,CAACc,eAAe,GAAG/B,SAAS,CAACa,IAAI,CAAC,KAAK,IAAI,GAAGkB,eAAe,GAAGlB,IAAI,2BAAAI,MAAA,CAAkBY,IAAI,KAAK,IAAI,GAAG,uBAAuB,iCAAAZ,MAAA,CAAyBa,OAAO,CAACE,MAAM,CAACH,IAAI,EAAE,UAAU,CAAC,CAAE;EACpM,CAAC;EACDI,oBAAoB,EAAEhC,KAAK,OAAAgB,MAAA,CAAOhB,KAAK,OAAAgB,MAAA,CAAIjB,SAAS,CAACC,KAAK,CAACiC,WAAW,CAAC,CAAC,CAAE;EAC1EC,sBAAsB,EAAEjC,OAAO,OAAAe,MAAA,CAAOf,OAAO,OAAAe,MAAA,CAAIjB,SAAS,CAACE,OAAO,CAACgC,WAAW,CAAC,CAAC,CAAE;EAClFE,sBAAsB,EAAEjC,OAAO,OAAAc,MAAA,CAAOd,OAAO,QAAAc,MAAA,CAAKjB,SAAS,CAACG,OAAO,CAAC+B,WAAW,CAAC,CAAC,CAAE;EACnF;EACAG,sBAAsB,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,KAAK,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,2DAAArB,MAAA,CAA+CsB,KAAK,CAACP,MAAM,CAACM,KAAK,EAAE,UAAU,CAAC,IAAK,mBAAmB;EACtLG,sBAAsB,EAAEA,CAACH,KAAK,EAAEC,KAAK,KAAKD,KAAK,KAAK,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,0DAAArB,MAAA,CAA0CsB,KAAK,CAACP,MAAM,CAACM,KAAK,EAAE,UAAU,CAAC,IAAK,gBAAgB;EAC9K;EACAI,cAAc,EAAE,gBAAgB;EAChCC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,IAAI,GAAG7C,sBAAsB,CAACQ,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}