{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'open previous view',\n  openNextView: 'open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? \"text input view is open, go to \".concat(viewType, \" view\") : \"\".concat(viewType, \" view is open, go to text input view\"),\n  // DateRange placeholders\n  start: 'Start',\n  end: 'End',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Select date',\n  dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  timePickerDefaultToolbarTitle: 'Select time',\n  dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => \"Select \".concat(view, \". \").concat(time === null ? 'No time selected' : \"Selected time is \".concat(adapter.format(time, 'fullTime'))),\n  hoursClockNumberText: hours => \"\".concat(hours, \" hours\"),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" minutes\"),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \" seconds\"),\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Choose date, selected date is \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Choose date',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? \"Choose time, selected time is \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Choose time',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);","map":{"version":3,"names":["getPickersLocalization","enUSPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","concat","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","DEFAULT_LOCALE","enUS"],"sources":["/var/www/html/Work/counts/web-count/node_modules/@mui/x-date-pickers/locales/enUS.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization'; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'open previous view',\n  openNextView: 'open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'End',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Select date',\n  dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  timePickerDefaultToolbarTitle: 'Select time',\n  dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} hours`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Choose date',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Choose time',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,gCAAgC,CAAC,CAAC;;AAEzE,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,gBAAgB;EAC/BC,SAAS,EAAE,YAAY;EACvB;EACAC,gBAAgB,EAAE,oBAAoB;EACtCC,YAAY,EAAE,gBAAgB;EAC9BC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,4CAA4C,GAAG,4CAA4C;EAC3JC,8BAA8B,EAAEA,CAACC,mBAAmB,EAAEC,QAAQ,KAAKD,mBAAmB,qCAAAE,MAAA,CAAqCD,QAAQ,gBAAAC,MAAA,CAAaD,QAAQ,yCAAsC;EAC9L;EACAE,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,KAAK;EACV;EACAC,iBAAiB,EAAE,QAAQ;EAC3BC,gBAAgB,EAAE,OAAO;EACzBC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,OAAO;EACzB;EACAC,6BAA6B,EAAE,aAAa;EAC5CC,iCAAiC,EAAE,oBAAoB;EACvDC,6BAA6B,EAAE,aAAa;EAC5CC,kCAAkC,EAAE,mBAAmB;EACvD;EACAC,cAAc,EAAEA,CAACf,IAAI,EAAEgB,IAAI,EAAEC,OAAO,eAAAb,MAAA,CAAeJ,IAAI,QAAAI,MAAA,CAAKY,IAAI,KAAK,IAAI,GAAG,kBAAkB,uBAAAZ,MAAA,CAAuBa,OAAO,CAACC,MAAM,CAACF,IAAI,EAAE,UAAU,CAAC,CAAE,CAAE;EACzJG,oBAAoB,EAAEC,KAAK,OAAAhB,MAAA,CAAOgB,KAAK,WAAQ;EAC/CC,sBAAsB,EAAEC,OAAO,OAAAlB,MAAA,CAAOkB,OAAO,aAAU;EACvDC,sBAAsB,EAAEC,OAAO,OAAApB,MAAA,CAAOoB,OAAO,aAAU;EACvD;EACAC,sBAAsB,EAAEA,CAACC,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,oCAAAtB,MAAA,CAAoCuB,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,aAAa;EAChMI,sBAAsB,EAAEA,CAACJ,QAAQ,EAAEC,KAAK,KAAKD,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,CAAC,oCAAAtB,MAAA,CAAoCuB,KAAK,CAACT,MAAM,CAACS,KAAK,CAACE,IAAI,CAACH,QAAQ,CAAC,EAAE,UAAU,CAAC,IAAK,aAAa;EAChM;EACAK,cAAc,EAAE,WAAW;EAC3BC,cAAc,EAAE;AAClB,CAAC;AACD,OAAO,MAAMC,cAAc,GAAGvC,WAAW;AACzC,OAAO,MAAMwC,IAAI,GAAGzC,sBAAsB,CAACC,WAAW,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}